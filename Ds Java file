Ds Exam .java 
import java.util.*;

class Employee {
    int empid;
    String name;
    int age;
    double sal;
    double comm;
    int deptno;

    Employee(int empid, String name, int age, double sal, double comm, int deptno) {
        this.empid = empid;
        this.name = name;
        this.age = age;
        this.sal = sal;
        this.comm = comm;
        this.deptno = deptno;
    }

    @Override
    public String toString() {
        return "Employee ID: " + empid + "\nName: " + name + "\nAge: " + age + "\nSalary: " + sal +
                "\nCommission: " + comm + "\nDepartment Number: " + deptno + "\n";
    }
}

class EmployeeLinkedList {
    private Node head;

    private class Node {
        Employee employee;
        Node next;

        Node(Employee employee) {
            this.employee = employee;
            this.next = null;
        }
    }

    public void insertEmployee(Employee employee) {
        Node newNode = new Node(employee);

        if (head == null) {
            head = newNode;
        } else {
            Node current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newNode;
        }
        System.out.println("Employee inserted successfully!");
    }

    public void searchEmployee(int empid) {
        Node current = head;
        while (current != null) {
            if (current.employee.empid == empid) {
                System.out.println("Employee found:");
                System.out.println(current.employee);
                return;
            }
            current = current.next;
        }
        System.out.println("Employee with ID " + empid + " not found.");
    }

    public void deleteEmployee(int empid) {
        if (head == null) {
            System.out.println("No employees to delete.");
            return;
        }

        if (head.employee.empid == empid) {
            head = head.next;
            System.out.println("Employee deleted successfully!");
            return;
        }

        Node current = head;
        Node previous = null;

        while (current != null) {
            if (current.employee.empid == empid) {
                previous.next = current.next;
                System.out.println("Employee deleted successfully!");
                return;
            }
            previous = current;
            current = current.next;
        }

        System.out.println("Employee with ID " + empid + " not found.");
    }

    public void printEmployee() {
        if (head == null) {
            System.out.println("No employees to print.");
            return;
        }

        int empid;
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the Employee ID: ");
        empid = scanner.nextInt();
        scanner.close();

        Node current = head;
        while (current != null) {
            if (current.employee.empid == empid) {
                System.out.println("Employee details:");
                System.out.println(current.employee);
                return;
            }
            current = current.next;
        }

        System.out.println("Employee with ID " + empid + " not found.");
    }

    public void printAllEmployee() {
        if (head == null) {
            System.out.println("No employees to print.");
            return;
        }

        System.out.println("Printing all employees:");

        Node current = head;
        while (current != null) {
            System.out.println(current.employee);
            current = current.next;
        }
    }
}

public class Main {
    public static void main(String[] args) {
        EmployeeLinkedList employeeList = new EmployeeLinkedList();

        // Insert employees
        employeeList.insertEmployee(new Employee(1, "John Doe", 30, 5000.0, 1000.0, 101));
        employeeList.insertEmployee(new Employee(2, "Jane Smith", 35, 6000.0, 1500.0, 102));
        employeeList.insertEmployee(new Employee(3, "Mark Johnson", 28, 4500.0, 800.0, 101));
        employeeList.insertEmployee(new Employee(4, "Sarah Williams", 32, 5500.0, 1200.0, 103));

        // Print all employees
        employeeList.printAllEmployee();

        // Search an employee
        employeeList.searchEmployee(2);

        // Delete an employee
        employeeList.deleteEmployee(3);

        // Print an employee
        employeeList.printEmployee();
    }
